
import java.awt.Color;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JLabel;
import static javax.swing.SwingConstants.CENTER;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author yangy
 */
public class TiledRouting extends javax.swing.JFrame {

    /**
     * Creates new form TiledRouting
     */
    public TiledRouting() {
        tile_graph = new TiledGraph(3,2);
        sources_a = new JLabel[tile_graph.getGraphSize()][tile_graph.getGraphSize()];
        sinks_a = new JLabel[tile_graph.getGraphSize()][tile_graph.getGraphSize()];
        wires_a = new JLabel[2 * tile_graph.getGraphSize() * tile_graph.getGraphSize()][2*tile_graph.getWireSize()];                
        tile_graph.initialize();
//        setUp();
        initComponents();
        tile_graph.find_shortest_path();
        showCong();
//        showGraph();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showInfo = new javax.swing.JLabel();
        showState = new javax.swing.JLabel();
        showPanel = new DrawTile(tile_graph,showInfo);
        route = new javax.swing.JButton();
        reroute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        showPanel.setPreferredSize(new java.awt.Dimension(640, 640));

        javax.swing.GroupLayout showPanelLayout = new javax.swing.GroupLayout(showPanel);
        showPanel.setLayout(showPanelLayout);
        showPanelLayout.setHorizontalGroup(
            showPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );
        showPanelLayout.setVerticalGroup(
            showPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        route.setText("start");
        route.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                routeActionPerformed(evt);
            }
        });

        reroute.setText("restart");
        reroute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rerouteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showState, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reroute)
                            .addComponent(route, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(showPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(showState, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(route)
                        .addGap(8, 8, 8)
                        .addComponent(reroute)
                        .addGap(18, 18, 18)
                        .addComponent(showInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(showPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void routeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_routeActionPerformed
        // TODO add your handling code here:
        System.out.println("===============================");
        showInfo.setText("");
        tile_graph.runIteration();
        showCong();
        showPanel.repaint();
    }//GEN-LAST:event_routeActionPerformed

    private void rerouteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rerouteActionPerformed
        // TODO add your handling code here:
        showInfo.setText("");
        tile_graph.initialize();
        tile_graph.find_shortest_path();
        showCong();
        showPanel.repaint();
    }//GEN-LAST:event_rerouteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TiledRouting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TiledRouting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TiledRouting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TiledRouting.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TiledRouting().setVisible(true);
            }
        });
    }

    public void setUp(){
        for (int i = 0; i < tile_graph.getGraphSize(); i++) {
            for (int j = 0; j < tile_graph.getGraphSize(); j++) {
                Tile<Integer> tile = tile_graph.getGraph()[i][j];
                int x_pos = 2 + i*640/tile_graph.getGraphSize();
                int y_pos = 2 + j*640/tile_graph.getGraphSize();
            sources_a[i][j] = new JLabel("", CENTER);
            sources_a[i][j].setText(Integer.toString(tile.getSources().get(0).getKey()));
            sources_a[i][j].setBackground(Color.green);
            sources_a[i][j].setOpaque(true);
            sources_a[i][j].setLocation(x_pos + 640/tile_graph.getGraphSize()/2 -25,y_pos+1);
            sources_a[i][j].setSize(25, 25);
            sinks_a[i][j] = new JLabel("", CENTER);
            sinks_a[i][j].setText(Integer.toString(tile.getSinks().get(0).getKey()));
            sinks_a[i][j].setBackground(Color.yellow);
            sinks_a[i][j].setOpaque(true);
            sinks_a[i][j].setLocation(x_pos+1,y_pos+ 640/tile_graph.getGraphSize()/2 -25);
            sinks_a[i][j].setSize(25, 25);
            int gap_x = 0;
            int gap_y = 0;
                for (int m = 0; m < tile.getWires().size(); m++) {
                    wires_a[i * tile_graph.getGraphSize() + j][m] = new JLabel("", CENTER);
                    wires_a[i * tile_graph.getGraphSize() + j][m].setText(Integer.toString(tile.getWires().get(m).getKey()));
                    wires_a[i * tile_graph.getGraphSize() + j][m].setBackground(Color.red);
                    wires_a[i * tile_graph.getGraphSize() + j][m].setOpaque(true);
                    if(tile.getWires().get(m).dir == 0) {
                    wires_a[i * tile_graph.getGraphSize() + j][m].setLocation(x_pos + gap_x + 640/tile_graph.getGraphSize()/ 2 + 640/tile_graph.getGraphSize()/ 16, y_pos);
                    wires_a[i * tile_graph.getGraphSize() + j][m].setSize(15,640/tile_graph.getGraphSize()/ 2);     
                    gap_x = gap_x + 640/tile_graph.getGraphSize()/ 4;
                    }
                    else{
                    wires_a[i * tile_graph.getGraphSize() + j][m].setLocation(x_pos, y_pos+ gap_y +640/tile_graph.getGraphSize()/ 2 + 640/tile_graph.getGraphSize()/ 16);
                    wires_a[i * tile_graph.getGraphSize() + j][m].setSize(640/tile_graph.getGraphSize()/ 2, 15);
                    gap_y = gap_y + 640/tile_graph.getGraphSize()/ 4;
                    }
                }
            }
        }
    }
    public void showGraph(){
        for (int i = 0; i < tile_graph.getGraphSize(); i++) {
            for (int j = 0; j < tile_graph.getGraphSize(); j++) {
                Tile<Integer> tile = tile_graph.getGraph()[i][j];
            showPanel.add(sources_a[i][j]);
            showPanel.add(sinks_a[i][j]);
                for (int m = 0; m < tile.getWires().size(); m++) {
                    showPanel.add(wires_a[i * tile_graph.getGraphSize() + j][m]);
                }
            }
        }
        showInfo.setFont(new Font("Courier", Font.PLAIN, 13)); 
    }
    
    
    public void showCong() {
        if (!tile_graph.testCong()) {
            showState.setText("STILL CONGESTED");
        } else {
            showState.setText("This circuit has no congestion");
        }
    }

    TiledGraph tile_graph;
    private JLabel sources_a[][];
    private JLabel sinks_a[][];
    private JLabel wires_a[][];
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton reroute;
    private javax.swing.JButton route;
    private javax.swing.JLabel showInfo;
    private javax.swing.JPanel showPanel;
    private javax.swing.JLabel showState;
    // End of variables declaration//GEN-END:variables
}
